#!/usr/bin/env bash
# Usage: ffs rbenv-app <command> <app-name> [ruby-version] [--skip-template]
# Summary: Manages application workflows
#
# Help:
#  command
#     new             creates a new application
#     remove          removes an existing application
#     bundle          bundles the application inside of a Vagrant VM
#
#   version           the version of ruby to use
#   --skip-template   will skip using our rails-app-composer generated template

set -e

path=$0
SCRIPT_ROOT="${path%/*}"
source $SCRIPT_ROOT/shared-lib

# Provide ffs completions
if [ "$1" = "--complete" ]; then
  echo new
  echo remove
  echo gemset
  echo bundle
  exec rbenv versions --bare
  exit
fi

# ffs rbenv-app new mytestapp --skip-template --version-1.8.7-p302

get_ruby_version() {
  local ruby_version=`cat $(rbenv version-file)`

  if [ "$1" == "" ]
  then
    echo "${ruby_version}"
  else
    echo "${1}"
  fi
}

create_app() {
  # local ruby_version="$(get_ruby_version $2)"
  # echo "found ruby version: ${ruby_version}"

  # echo "setting ruby to $ruby_version for $1"
  # echo $ruby_version > .rbenv-version

  if [ "$3" == "" ]
  then
    # use our default application template
    echo "creating $1 application"
    rails new $1 -m ~/Projects/Ruby/templates/ffs_rails_template.rb -T --database=postgresql --skip-bundle
  else
    # don't use our default application template
    rails new $1 -T -O --skip-bundle
  fi

  echo "setting ruby version for $1 to $2"
  cd $1
  rbenv local $2

  # if ! git rev-parse --git-dir >/dev/null 2>&1; then
    # echo "initializing git repo for $1"
    # git init
  # fi
}

remove_app() {
  local ruby_version=`cat $(rbenv version-file)`

  echo "removing app: $1"
  rm -rf $1
}

bundle_app() {
  if [ ! -e "${PWD}/Vagrantfile" ]
  then
    echo "No Vagrantfile found."
    echo "Must be in a directory with a Vagrantfile."
    exit 1
  fi

  required_status='running'
  current_status=$(vagrant status | grep -i '\(poweroff\|running\|not created\)')
  if [[ ! $current_status =~ "${required_status}" ]]
  then
    echo "Found Vagrantfile."
    echo "VM is not currently running."
    echo "Please 'vagrant up' and run 'ffs app bundle' again."
    exit 1
  fi

  vagrant ssh -c "cd /vagrant; bundle install --binstubs --path vendor/bundle"
}

parse_options "$@"

case "${ARGUMENTS[0]}" in
  "new" )
    APP_NAME="${ARGUMENTS[1]}"
    create_app "${APP_NAME}" "${ARGUMENTS[2]}" "${OPTIONS[0]}"
    exit 0
    ;;
  "remove" )
    APP_NAME="${ARGUMENTS[1]}"
    remove_app "${APP_NAME}"
    exit 0
    ;;
  "bundle" )
    APP_NAME="${ARGUMENTS[1]}"
    bundle_app "${APP_NAME}"
    exit 0

    ;;
esac
